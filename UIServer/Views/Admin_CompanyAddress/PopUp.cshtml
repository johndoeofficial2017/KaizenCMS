@{
    Layout = null;
}
<script>
    function btnSelect_Click(e) {
        e.preventDefault();
        try {
            var ActiveScreenID = $("#ActiveScreenID").val();
            var widget = $("#widget-" + ActiveScreenID)
            var data = this.dataItem($(e.currentTarget).closest("tr"));
            var scope = angular.element(widget).scope();
            scope.$apply(function () {
                scope.CompanyAddressBack(data);
            });
            var kendoWindow = $("#MainDialog").data("kendoWindow");
            kendoWindow.close();
        }
        catch (err) {
            alert("Error \n\n" + err.message);
        }
    };
    function RefreshGrid() {
        var grid = $("#GridAdmin_CompanyAddressPopUp").data("kendoGrid");
        grid.dataSource.read();
    };
</script>
<div class="panel panel-default">
    <div class="panel-body no-padding">
        <fieldset class="margin-15">
            <div class="form-group">
                <label class="col-sm-1 control-label text-center">Field</label>
                <div class="col-sm-2">
                    <select id="DropFieldID" class="form-control" style="height: auto;">
                        <option value="CompanyAddressCode">Company Address Code</option>
                        <option value="CompanyAddressName">Company Address Name</option>
                        <option value="AddressName">Address Name</option>
                        <option value="CountryID">Country ID</option>
                        <option value="CityID">City ID</option>
                        <option value="Pnone01">Phone 01</option>
                        <option value="Pnone02">Phone 02</option>
                        <option value="Pnone03">Phone 03</option>
                        <option value="Pnone04">Phone 04</option>
                        <option value="MobileNo1">Mobile No 01</option>
                        <option value="MobileNo2">Mobile No 02</option>
                        <option value="MobileNo3">Mobile No 03</option>
                        <option value="MobileNo4">Mobile No 04</option>
                        <option value="-1" selected>All</option>
                    </select>
                </div>
                <label class="col-sm-1 control-label text-center">Operator</label>
                <div class="col-sm-2">
                    <select class="form-control" id="DropFltrOperator" style="height: auto;">
                        <option value="0">Is Less Than</option>
                        <option value="1">Is Less Than Or Equal To</option>
                        <option value="2">Is Equal To</option>
                        <option value="3">Is Not Equal To</option>
                        <option value="4">Is Greater Than Or Equal To</option>
                        <option value="5">Is Greater Than</option>
                        <option value="6">Starts With</option>
                        <option value="7">Ends With</option>
                        <option value="8" selected>Contains</option>
                        <option value="9">Is Contained In</option>
                        <option value="10">Does Not Contain</option>
                    </select>
                </div>
                <div class="col-sm-3 pull-right">
                    <div class="input-group">
                        <input class="form-control" id="SearchcritariaPopUp" type="text">
                        <div class="input-group-btn input-group-sm" onclick="RefreshGrid()">
                            <a href="javascript:void(0);" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    @(Html.Kendo().Grid<Kaizen.Admin.Sys00001>().Name("GridAdmin_CompanyAddressPopUp")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.CompanyAddressCode).Title("Address Code");
                        columns.Bound(c => c.CompanyAddressName).Title("Company Address Name");
                        columns.Bound(c => c.AddressName).Title("Address Name");
                        columns.Bound(c => c.Address1).Title("Address 01");
                        columns.Command(command => command.Custom("Select").SendDataKeys(true)
                        .Click("btnSelect_Click"));
                    })
                        .Pageable(pager => pager.Messages(messages => messages.Display("Showing Address from {0} to {1}. Total Addresses: <strong>{2}</strong>")
                        .ItemsPerPage("Address Per page").Empty("No Address Information")).Refresh(true).PageSizes(true).Input(true).ButtonCount(10))
                        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.SingleColumn))
                        .Navigatable()
                        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                        .Reorderable(reorder => reorder.Columns(true))
                        .Resizable(ss => ss.Columns(true))
                        .ColumnMenu().Scrollable(s => s.Height(350)).Filterable()
                        .DataSource(dataSource => dataSource.Ajax().ServerOperation(true).PageSize(20)
                        .Read(read => read.Action("GetListPopUpGrid", "Admin_CompanyAddress").Type(HttpVerbs.Get)
                        .Data("GetGenericPopUpKaizenPublicKey"))
                        .Model(model =>
                        {
                            model.Id(o => o.CompanyAddressCode);
                            model.Field(o => o.CompanyAddressCode);
                            model.Field(o => o.CompanyAddressName);
                            model.Field(o => o.AddressName);
                            model.Field(o => o.Address1);
                            model.Field(o => o.Address2);
                            model.Field(o => o.Address3);
                            model.Field(o => o.Address4);
                            model.Field(o => o.CityID);
                            model.Field(o => o.CountryID);
                            model.Field(o => o.MobileNo1);
                            model.Field(o => o.MobileNo2);
                            model.Field(o => o.MobileNo3);
                            model.Field(o => o.MobileNo4);
                            model.Field(o => o.Pnone01);
                            model.Field(o => o.Pnone02);
                            model.Field(o => o.Pnone03);
                            model.Field(o => o.Pnone04);
                            model.Field(o => o.POBox);
                            model.Field(o => o.Other01);
                            model.Field(o => o.Other02);
                            model.Field(o => o.Other03);
                            model.Field(o => o.Other04);
                            model.Field(o => o.Email01);
                            model.Field(o => o.Email02);
                            model.Field(o => o.Email03);
                            model.Field(o => o.Email04);
                        })
                        )
    )
</div>
