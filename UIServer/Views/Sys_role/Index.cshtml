@model Kaizen.Configuration.Kaizen00011
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<script>
    function btnEditSys_role_Click(RoleID) {
        var scope = angular.element(document.getElementById("widget-Sys_role")).scope();
        scope.$apply(function () {
            scope.EditKaizen00030(RoleID);
        });
    };
</script>

<div ng-controller="Sys_roleController">
    <div class="widget" id="widget-Sys_role">
        <div ng-show="PagesKaizen00030.length > 0">
            <div ng-repeat="Page in PagesKaizen00030">
                <div ng-include="Page.url">Content from blocks goes here</div>
            </div>
        </div>
        <div class="widget-body" ng-show="PagesKaizen00030.length == 0">
            <div kendo-toolbar k-options="toolbarOptions">
            </div>
            <div>
                @(Html.Kendo().Grid<Kaizen.Configuration.Kaizen00030>()
                                .Name("GridSys_role")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.RoleID).ClientTemplate(@"<a href='javascript:void(0)' onclick=""btnEditSys_role_Click('#:RoleID#');""> #:RoleID# </a>").Width(100).Title("Role ID");
                            columns.Bound(c => c.RoleName);
                        })
                            .HtmlAttributes(new { style = "height:500px;" })
                            .Scrollable(scrollable => scrollable.Virtual(true))
                            .Pageable(pager => pager.Messages(messages => messages.Display("Showing Roles from {0} to {1}. Total Roles: <strong>{2}</strong>").Empty("No Role Information")).Refresh(true).PageSizes(true).ButtonCount(14))
                            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.SingleColumn))
                            .Navigatable()
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .Reorderable(reorder => reorder.Columns(true))
                            .Resizable(ss => ss.Columns(true))
                            .ColumnMenu()
                            .Filterable()
                            .DataSource(dataSource => dataSource.Ajax().ServerOperation(true).PageSize(17)
                            .Read(read => read.Action("GetDataListGrid", "Sys_role")
                            .Type(HttpVerbs.Get).Data("GetGenericKaizenPublicKey"))
                            .Model(model =>
                            {
                                model.Id(p => p.RoleID);
                                model.Field(p => p.RoleID);
                                model.Field(p => p.RoleName);
                            })
                        )
                )
            </div>
        </div>
    </div>
</div>

