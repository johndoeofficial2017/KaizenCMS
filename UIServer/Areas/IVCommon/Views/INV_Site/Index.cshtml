@{
    Layout = null;
}
<script>
    function btnEditCountry_Click(SiteID) {
        var scope = angular.element(document.getElementById("widget-INV_Site")).scope();
        scope.$apply(function () {
            scope.EditIV00011(SiteID);
        });
    };
</script>
<div ng-controller="INV_SiteController">
    <div>
        <div class="widget" id="widget-INV_Site">
            <div ng-show="PagesIV00011.length >0">
                <div ng-repeat="Page in PagesIV00011">
                    <div ng-include="Page.url">Content from blocks goes here</div>
                </div>
            </div>
            <div class="widget-body" ng-show="PagesIV00011.length == 0">
                <div class="wide bordered-bottom bordered-palegreen">
                    <div kendo-toolbar k-options="toolbarOptions">
                    </div>
                </div>
                <div>
                    @(Html.Kendo().Grid<Kaizen.Inventory.IV00011>()
                            .Name("GridINV_Site")
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.SiteID).ClientTemplate(@"<a href='javascript:void(0)' onclick=""btnEditCountry_Click('#:SiteID#');""> #:SiteID# </a>").Width(100).Title("Site ID");
                                columns.Bound(c => c.SiteName).Title("Site Name");
                            })
                            .Filterable()
                            .Pageable(pager => pager.Messages(messages => messages.Display("Showing Site from {0} to {1}. Total Sites: <strong>{2}</strong>")
                            .ItemsPerPage("Site Per page").Empty("No Site Information")).Refresh(true).PageSizes(true).Input(true).ButtonCount(14))
                            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.SingleColumn))
                            .Navigatable()
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .Reorderable(reorder => reorder.Columns(true))
                            .Resizable(ss => ss.Columns(true))
                            .ColumnMenu().Scrollable(s => s.Height(400))
                            .DataSource(dataSource => dataSource.Ajax().ServerOperation(true).PageSize(20)
                            .Read(read => read.Action("GetDataListGrid", "INV_Site")
                            .Type(HttpVerbs.Get).Data("GetGenericKaizenPublicKey"))
                            .Model(model =>
                            {
                                model.Id(o => o.SiteID);
                                model.Field(o => o.SiteID);
                                model.Field(o => o.SiteName);
                                model.Field(o => o.Address);
                                model.Field(o => o.BinTrack);
                                model.Field(o => o.Phone01);
                                model.Field(o => o.Phone02);
                                model.Field(o => o.Phone03);
                                model.Field(o => o.Phone04);
                                model.Field(o => o.Phone05);
                                model.Field(o => o.SiteDescription);
                                model.Field(o => o.SiteManger);
                            })
                        )
                    )
                </div>
            </div>
        </div>
    </div>
</div>




