@{
    Layout = null;
}
<script>
    $(function () {
        $('#GridCMS_CaseAssign').on('click', '.invertedchk', function () {
            var checked = $(this).is(':checked');
            var grid = $('#GridCMS_CaseAssign').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsSeleceted', checked);
        })
    });
    $("#selectAll").on('click', function (e) {
        var $cb = $(this);
        var checked = $cb.is(':checked');
        var grid = $('#GridCMS_CaseAssign').data('kendoGrid');
        grid.table.find("tr").find("td:last input").attr("checked", checked);
        //now making all the rows value to 1 or 0
        var items = $("#GridCMS_CaseAssign").data("kendoGrid").dataSource.data();
        for (i = 0; i < items.length; i++) {
            var item = items[i];
            item.set('IsSeleceted', checked);
            // var row = grid.tbody.find(">tr:not(.k-grouping-row)").eq(0);
            // grid.select(row);
        }

        if (!checked) {
            $("#GridCMS_CaseAssign").data("kendoGrid").clearSelection();
        }
    });
    function GetCMS_Trx_CasesAssignmentPram() {
        var ActiveScreenID = $("#ActiveScreenID").val();
        var scope = angular.element(document.getElementById('widget-' + ActiveScreenID)).scope();
        //var scope = angular.element(document.getElementById('widget-CMS_Case')).scope();
        return {
            TRXTypeID: scope.SelectedLookUp.SelectedDocType.TRXTypeID,
            Searchcritaria: "",
            KaizenPublicKey: sessionStorage.PublicKey
        };
    }
</script>
<div class="widget-body container-fluid">
    <div class="row">
        <div class="well no-padding-left no-padding-right no-padding-bottom">
            <div class="row form-group">
                <div class="col-md-6">
                    <div class="col-md-3">
                        <label class="control-label">Transaction ID</label>
                    </div>
                    <div class="col-md-9">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Assigment ID" 
                                   ng-model="CM00202.AssigmentID">
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="col-md-3">
                      
                    </div>
                    <div class="col-md-9">
                    </div>
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-6">
                    <div class="col-md-3">
                        <label class="control-label">Agent ID</label>
                    </div>
                    <div class="col-md-9">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Agent ID" ng-model="CM00202.AgentID">
                            <span class="input-group-btn">
                                <button ng-click="OpenkendoWindowForm('CMS','CMS_Agent','PopUp',null,'AgentAssign');" class="btn btn-default">
                                    <span class="fa fa-search"></span>
                                </button>
                                <button ng-click="AssignCaseToAgent();" class="btn btn-primary">
                                    <span class="fa fa-arrows-alt"></span> Assign
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="col-md-3">
                        <label class="control-label">Assign Date</label>
                    </div>
                    <div class="col-md-9">
                        <input kendo-date-time-picker
                               k-parse-formats="['yyyy-MM-ddTHH:mm:ss']"
                               k-ng-model="CM00202.AssignDate"
                               style="width: 100%;" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-1">
                        <label class="control-label">Description</label>
                    </div>
                    <div class="col-md-11">
                        <textarea placeholder="Case Remarks" style="width: 100%;"
                                  class="bold text-error form-control ng-pristine ng-untouched ng-valid ng-empty"
                                  ng-model="CM00202.AssignDescription" rows="4"></textarea>
                    </div>
                </div>
            </div>
            <div class="row form-group">
                <button ng-click="OpenFilterWindow('GridCMS_CaseAssign','CMS_Case')" class="btn btn-default">
                    <i class="fa fa-filter"></i> Filter
                </button>
                <button ng-click="Cancel();" class="btn btn-default">
                    <i class="fa fa-ban"></i> Cancel
                </button>
                <select kendo-drop-down-list k-ng-model="SelectedLookUp.SelectedDocType"
                        k-options="CaseTypeOptions"
                        k-on-change="GridRefresh('GridCMS_CaseAssign')" 
                        style="width:200PX"></select>

            </div>


            <br />
            <div style="overflow: hidden;">
                @(Html.Kendo().Grid<Kaizen.CMS.CM00203>()
                        .Name("GridCMS_CaseAssign")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.IsSeleceted).Title("Select")
                    .ClientTemplate("<label><input type='checkbox' class='inverted invertedchk' #= IsSeleceted ? checked='checked' : '' #><span class='text'></span></label>")
                    .HeaderTemplate("<label><input type='checkbox' id='selectAll' class='inverted'><span class='text'></span></label>")
                    .Width(60).Sortable(false).Filterable(false);
                            columns.Bound(c => c.CaseRef).Title("Case Reference");
                            columns.Bound(c => c.AgentID).Title("Agent ID");
                            columns.Bound(c => c.CurrencyCode).Title("Currency Code");
                            columns.Bound(c => c.CIFNumber).Title("Debtor ID");
                            columns.Bound(c => c.CaseStatusID).Title("Case Status ID").Filterable(filterable => filterable.UI("StatusFilter"));
                            columns.Bound(c => c.ReminderDateTime).Title("Reminder DateTime").Format("{0:dd/MM/yyyy hh:mm:ss tt}");
                            columns.Bound(c => c.BookingDate).Title("Booking Date").Format("{0:dd/MM/yyyy}");
                            columns.Bound(c => c.ClaimAmount).Title("Claim Amount").ClientFooterTemplate("#=FormatDecimalDigit(sum,data.DecimalDigit)#");
                        })
                            .AutoBind(false)
                             .Pageable(pager => pager.Messages(messages => messages.Display("{0} to {1}. Total: <strong>{2}</strong>")
                             .ItemsPerPage("Per page").Empty("No Cases Information")).Refresh(true).PageSizes(true).Input(true).ButtonCount(10))
                            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.SingleColumn))
                            .Navigatable().HtmlAttributes(new { style = "overflow:hidden" })
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .Reorderable(reorder => reorder.Columns(true))
                            .Resizable(ss => ss.Columns(true))
                            .ColumnMenu().Scrollable(s => s.Height(350)).Filterable()
                            .DataSource(dataSource => dataSource.Ajax().ServerOperation(true).PageSize(500)
                             .Aggregates(aggregates =>
                                                                {
                                                                    aggregates.Add(p => p.ClaimAmount).Sum();
                                                                })
                            .Read(read => read.Action("GetDataListAssignGrid", "CMS_Case")
                            .Type(HttpVerbs.Get).Data("GetCMS_Trx_CasesAssignmentPram"))
                            .Model(model => model.Id(p => p.CaseRef))
                        )
                )
            </div>
        </div>
    </div>
</div>



